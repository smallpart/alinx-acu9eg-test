

///////////////////////////////////////////////////////////////////////////////
//   ____  ____
//  /   /\/   /
// /___/  \  /    Vendor: Xilinx
// \   \   \/     Version : 1.7
//  \   \         Application :  Ultrascale FPGAs Transceivers Wizard
//  /   /         Filename : system_jesd204_phy_0_0_gt_common_wrapper.v
// /___/   /\
// \   \  /  \
//  \___\/\___\
//
//
// Module system_jesd204_phy_0_0_gt_common_wrapper (a GT Wrapper)
// Generated by Xilinx Ultrascale FPGAs Transceivers Wizard
//
//
// (c) Copyright 2013-2014 Xilinx, Inc. All rights reserved.
//
// This file contains confidential and proprietary information
// of Xilinx, Inc. and is protected under U.S. and
// international copyright and other intellectual property
// laws.
//
// DISCLAIMER
// This disclaimer is not a license and does not grant any
// rights to the materials distributed herewith. Except as
// otherwise provided in a valid license issued to you by
// Xilinx, and to the maximum extent permitted by applicable
// law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
// WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
// AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
// BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
// INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
// (2) Xilinx shall not be liable (whether in contract or tort,
// including negligence, or under any other theory of
// liability) for any loss or damage of any kind or nature
// related to, arising under or in connection with these
// materials, including for any direct, or any indirect,
// special, incidental, or consequential loss or damage
// (including loss of data, profits, goodwill, or any type of
// loss or damage suffered as a result of any action brought
// by a third party) even if such damage or loss was
// reasonably foreseeable or Xilinx had been advised of the

// by a third party) even if such damage or loss was
// reasonably foreseeable or Xilinx had been advised of the
// possibility of the same.
//
// CRITICAL APPLICATIONS
// Xilinx products are not designed or intended to be fail-
// safe, or for use in any application requiring fail-safe
// performance, such as life-support or safety devices or
// systems, Class III medical devices, nuclear facilities,
// applications related to the deployment of airbags, or any
// other applications that could lead to death, personal
// injury, or severe property or environmental damage
// (individually and collectively, "Critical
// Applications"). Customer assumes the sole risk and
// liability of any use of Xilinx products in Critical
// Applications, subject only to applicable laws and
// regulations governing limitations on product liability.
//
// THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
// PART OF THIS FILE AT ALL TIMES.


`default_nettype wire
`timescale 1ns / 1ps
`define DLY #1


//***************************** Entity Declaration ****************************
module system_jesd204_phy_0_0_gt_common_wrapper
(
  // -------------------- Common Block  - Ref Clock Ports ---------------------
  input           common_gtrefclk0,
  input           common_gtrefclk1,
  // ----------------------- Common Block - DRP Ports -------------------------
  input           common_drpclk,
  input  [15:0]   common_drpaddr,
  input  [15:0]   common_drpdi,
  input           common_drpen,
  input           common_drpwe,
  output [15:0]   common_drpdo,
  output          common_drprdy,
  // ----------------------- Common Block - QPLL0 Ports -----------------------
  output          common_qpll0_lock,
  output          common_qpll0_outclk,
  output          common_qpll0_outrefclk,
  input           common_qpll0_reset,
  input           common_qpll0_pd,
  // ----------------------- Common Block - QPLL1 Ports -----------------------
  output          common_qpll1_lock,
  output          common_qpll1_outclk,
  output          common_qpll1_outrefclk,
  input           common_qpll1_reset,
  input           common_qpll1_pd
);

  //***************************** Wire Declarations *****************************

  // ground and vcc signals
  wire            tied_to_ground_i;
  wire    [63:0]  tied_to_ground_vec_i;
  wire            tied_to_vcc_i;
  wire    [63:0]  tied_to_vcc_vec_i;

  wire            GTHE4_COMMON_GTREFCLK00;
  wire            GTHE4_COMMON_QPLL0RESET;
  wire            GTHE4_COMMON_QPLL0LOCK;
  wire            GTHE4_COMMON_QPLL0OUTCLK;
  wire            GTHE4_COMMON_QPLL0OUTREFCLK;
  wire            GTHE4_COMMON_QPLL0LOCKEN;
  wire            GTHE4_COMMON_QPLL0PD;
  wire            GTHE4_COMMON_GTREFCLK01;
  wire            GTHE4_COMMON_QPLL1RESET;
  wire            GTHE4_COMMON_QPLL1LOCK;
  wire            GTHE4_COMMON_QPLL1OUTCLK;
  wire            GTHE4_COMMON_QPLL1OUTREFCLK;
  wire            GTHE4_COMMON_QPLL1LOCKEN;
  wire            GTHE4_COMMON_QPLL1PD;
  wire            GTHE4_COMMON_DRPCLK;
  wire    [15:0]  GTHE4_COMMON_DRPADDR;
  wire    [15:0]  GTHE4_COMMON_DRPDI;
  wire            GTHE4_COMMON_DRPEN;
  wire            GTHE4_COMMON_DRPWE;
  wire    [15:0]  GTHE4_COMMON_DRPDO;
  wire            GTHE4_COMMON_DRPRDY;

  // Connect only required internal signals to GT Common block
  assign GTHE4_COMMON_GTREFCLK00      = common_gtrefclk0;
  assign GTHE4_COMMON_QPLL0RESET      = common_qpll0_reset;
  assign GTHE4_COMMON_QPLL0PD         = common_qpll0_pd;
  assign GTHE4_COMMON_QPLL0LOCKEN     = ~common_qpll0_pd;
  assign common_qpll0_lock            = GTHE4_COMMON_QPLL0LOCK;
  assign common_qpll0_outclk          = GTHE4_COMMON_QPLL0OUTCLK;
  assign common_qpll0_outrefclk       = GTHE4_COMMON_QPLL0OUTREFCLK;

  assign GTHE4_COMMON_GTREFCLK01      = common_gtrefclk1;
  assign GTHE4_COMMON_QPLL1RESET      = common_qpll1_reset;
  assign GTHE4_COMMON_QPLL1PD         = common_qpll1_pd;
  assign GTHE4_COMMON_QPLL1LOCKEN     = ~common_qpll1_pd;
  assign common_qpll1_lock            = GTHE4_COMMON_QPLL1LOCK;
  assign common_qpll1_outclk          = GTHE4_COMMON_QPLL1OUTCLK;
  assign common_qpll1_outrefclk       = GTHE4_COMMON_QPLL1OUTREFCLK;

  assign GTHE4_COMMON_DRPCLK          = common_drpclk;
  assign GTHE4_COMMON_DRPADDR         = common_drpaddr;
  assign GTHE4_COMMON_DRPDI           = common_drpdi;
  assign GTHE4_COMMON_DRPEN           = common_drpen;
  assign GTHE4_COMMON_DRPWE           = common_drpwe;
  assign common_drpdo                 = GTHE4_COMMON_DRPDO;
  assign common_drprdy                = GTHE4_COMMON_DRPRDY;

  //********************************* Main Body of Code**************************

  assign tied_to_ground_i             = 1'b0;
  assign tied_to_ground_vec_i         = 64'h0000000000000000;
  assign tied_to_vcc_i                = 1'b1;
  assign tied_to_vcc_vec_i            = 64'hffffffffffffffff;

  // Instantiate the GT Common block
    system_jesd204_phy_0_0_gt_common system_jesd204_phy_0_0_gt_common_i
  (
   .GTHE4_COMMON_BGBYPASSB(1'b1),
   .GTHE4_COMMON_BGMONITORENB(1'b1),
   .GTHE4_COMMON_BGPDB(1'b1),
   .GTHE4_COMMON_BGRCALOVRD(5'b11111),
   .GTHE4_COMMON_BGRCALOVRDENB(1'b1),
   .GTHE4_COMMON_DRPADDR(GTHE4_COMMON_DRPADDR),
   .GTHE4_COMMON_DRPCLK(GTHE4_COMMON_DRPCLK),
   .GTHE4_COMMON_DRPDI(GTHE4_COMMON_DRPDI),
   .GTHE4_COMMON_DRPDO(GTHE4_COMMON_DRPDO),
   .GTHE4_COMMON_DRPEN(GTHE4_COMMON_DRPEN),
   .GTHE4_COMMON_DRPRDY(GTHE4_COMMON_DRPRDY),
   .GTHE4_COMMON_DRPWE(GTHE4_COMMON_DRPWE),
   .GTHE4_COMMON_GTGREFCLK0(1'b0),
   .GTHE4_COMMON_GTGREFCLK1(1'b0),
   .GTHE4_COMMON_GTNORTHREFCLK00(1'b0),
   .GTHE4_COMMON_GTNORTHREFCLK01(1'b0),
   .GTHE4_COMMON_GTNORTHREFCLK10(1'b0),
   .GTHE4_COMMON_GTNORTHREFCLK11(1'b0),
   .GTHE4_COMMON_GTREFCLK00(GTHE4_COMMON_GTREFCLK00),
   .GTHE4_COMMON_GTREFCLK01(GTHE4_COMMON_GTREFCLK01),
   .GTHE4_COMMON_GTREFCLK10(1'b0),
   .GTHE4_COMMON_GTREFCLK11(1'b0),
   .GTHE4_COMMON_GTSOUTHREFCLK00(1'b0),
   .GTHE4_COMMON_GTSOUTHREFCLK01(1'b0),
   .GTHE4_COMMON_GTSOUTHREFCLK10(1'b0),
   .GTHE4_COMMON_GTSOUTHREFCLK11(1'b0),
   .GTHE4_COMMON_PCIERATEQPLL0(3'b000),
   .GTHE4_COMMON_PCIERATEQPLL1(3'b000),
   .GTHE4_COMMON_PMARSVD0(8'b00000000),
   .GTHE4_COMMON_PMARSVD1(8'b00000000),
   .GTHE4_COMMON_PMARSVDOUT0(),
   .GTHE4_COMMON_PMARSVDOUT1(),
   .GTHE4_COMMON_QPLL0CLKRSVD0(1'b0),
   .GTHE4_COMMON_QPLL0CLKRSVD1(1'b0),
   .GTHE4_COMMON_QPLL0FBCLKLOST(),
   .GTHE4_COMMON_QPLL0FBDIV(8'b00000000),
   .GTHE4_COMMON_QPLL0LOCK(GTHE4_COMMON_QPLL0LOCK),
   .GTHE4_COMMON_QPLL0LOCKDETCLK(1'b0),
   .GTHE4_COMMON_QPLL0LOCKEN(GTHE4_COMMON_QPLL0LOCKEN),
   .GTHE4_COMMON_QPLL0OUTCLK(GTHE4_COMMON_QPLL0OUTCLK),
   .GTHE4_COMMON_QPLL0OUTREFCLK(GTHE4_COMMON_QPLL0OUTREFCLK),
   .GTHE4_COMMON_QPLL0PD(GTHE4_COMMON_QPLL0PD),
   .GTHE4_COMMON_QPLL0REFCLKLOST(),
   .GTHE4_COMMON_QPLL0REFCLKSEL(3'b001),
   .GTHE4_COMMON_QPLL0RESET(GTHE4_COMMON_QPLL0RESET),
   .GTHE4_COMMON_QPLL1CLKRSVD0(1'b0),
   .GTHE4_COMMON_QPLL1CLKRSVD1(1'b0),
   .GTHE4_COMMON_QPLL1FBCLKLOST(),
   .GTHE4_COMMON_QPLL1FBDIV(8'b00000000),
   .GTHE4_COMMON_QPLL1LOCK(GTHE4_COMMON_QPLL1LOCK),
   .GTHE4_COMMON_QPLL1LOCKDETCLK(1'b0),
   .GTHE4_COMMON_QPLL1LOCKEN(GTHE4_COMMON_QPLL1LOCKEN),
   .GTHE4_COMMON_QPLL1OUTCLK(GTHE4_COMMON_QPLL1OUTCLK),
   .GTHE4_COMMON_QPLL1OUTREFCLK(GTHE4_COMMON_QPLL1OUTREFCLK),
   .GTHE4_COMMON_QPLL1PD(GTHE4_COMMON_QPLL1PD),
   .GTHE4_COMMON_QPLL1REFCLKLOST(),
   .GTHE4_COMMON_QPLL1REFCLKSEL(3'b001),
   .GTHE4_COMMON_QPLL1RESET(GTHE4_COMMON_QPLL1RESET),
   .GTHE4_COMMON_QPLLDMONITOR0(),
   .GTHE4_COMMON_QPLLDMONITOR1(),
   .GTHE4_COMMON_QPLLRSVD1(8'b00000000),
   .GTHE4_COMMON_QPLLRSVD2(5'b00000),
   .GTHE4_COMMON_QPLLRSVD3(5'b00000),
   .GTHE4_COMMON_QPLLRSVD4(8'b00000000),
   .GTHE4_COMMON_RCALENB(1'b1),
   .GTHE4_COMMON_REFCLKOUTMONITOR0(),
   .GTHE4_COMMON_REFCLKOUTMONITOR1(),
   .GTHE4_COMMON_RXRECCLK0SEL(),
   .GTHE4_COMMON_RXRECCLK1SEL(),
   .GTHE4_COMMON_SDM0DATA(25'b0000000000000000000000000),
   .GTHE4_COMMON_SDM0FINALOUT(),
   .GTHE4_COMMON_SDM0RESET(1'b0),
   .GTHE4_COMMON_SDM0TESTDATA(),
   .GTHE4_COMMON_SDM0TOGGLE(1'b0),
   .GTHE4_COMMON_SDM0WIDTH(2'b00),
   .GTHE4_COMMON_SDM1DATA(25'b0000000000000000000000000),
   .GTHE4_COMMON_SDM1FINALOUT(),
   .GTHE4_COMMON_SDM1RESET(1'b0),
   .GTHE4_COMMON_SDM1TESTDATA(),
   .GTHE4_COMMON_SDM1TOGGLE(1'b0),
   .GTHE4_COMMON_SDM1WIDTH(2'b00),
   .GTHE4_COMMON_TCONGPI(10'b0000000000),
   .GTHE4_COMMON_TCONGPO(),
   .GTHE4_COMMON_TCONPOWERUP(1'b0),
   .GTHE4_COMMON_TCONRESET(2'b00),
   .GTHE4_COMMON_TCONRSVDIN1(2'b00),
   .GTHE4_COMMON_TCONRSVDOUT0()
  );


endmodule
